procedure Martin {
    read a; read B;
    c = a * B;
    D = c + 5;
    read XyZ;
    if (a != B) then {
        B = B + 5;
    } else {
        a = a * 3;}
    while (D < (B * 5)) {
        read e;
        D =
         D + e;}
    read e;
    f = e + XyZ + 4;
    if (8 == D) then {
        if (c <= D) then {
            c = f + XyZ;
        } else {
            XyZ = D % 5;
            print XyZ;}
        a = a + XyZ;
        print a;
    } else {
        a = a + (D / c) * B;
        while (XyZ <= 10) {
            read Henz;
            D = D + Henz;}
    }
    print XyZ;
    print D;
    while ((2 * c) ==
    3) {
        read h;
        while (h > 5) {
            h = e + XyZ * 5 - D % 5;}
        D = (2 * D + (h % 2));
        read g;
        if (g > h)
        then {
            while ((XyZ+f)>g) {
                f =f-(2*D)+B*3;
                print f;}
        } else {
            h = g * 2 - XyZ % a + B; print h;}
    }

    read i;
    j = e + D % 5;
    k = 2 + a * B + 4 / B * 3;
    if (!(j > k))
     then {
        while (j <= k) {
            read l;
            print l;
            k = l + g *  2 + D % 4;
            while (l > XyZ + 5)
            {
                XyZ = f + XyZ % (23 + 4) * 6 / a;
                print XyZ;
            }
        }
    } else {
        while
        (a + (B * c) / D - e != f * j + k - l + XyZ) {
            read m;
            if (g  + 2 >=
            h) then {
                h = m + 4 - 2 * B * 3;
                print h;
                XyZ =  XyZ + f - g;
            } else {
                n = 1 / c + i;
                m = n % k + j - D - e * 5;
                print m;}
        }
        a = k + i;
        read XyZ;
        if (a > XyZ) then {
            read B;
            c = B * a;
            h = 5 + c - k;
            print h;
        } else {
            read c;
            D = i * C + k;
            print D;
        }
        print a;
        print D;
    }
}

procedure ifInsideIf {
    a = 1;
    if (b == 2) then {
        c = 3;
        if (d == 4) then {
            e = 5;
        } else {
            f = 6;
        }
        g = 7;
    } else {
        h = 8;
    }
    i = 9;
}

procedure whileInsideIf {
    j = 10;
    if (k == 11) then {
        l = 12;
        while (m == 13) {
            n = 14;
        }
        o = 15;
    } else {
        p = 16;
    }
    q = 17;
}

procedure ifInsideWhile {
    r = 18;
    while (s == 19) {
        t = 20;
        if (u == 21) then {
            v = 22;
        } else {
            w = 23;
        }
        x = 24;
    }
    y = 25;
}

procedure whileInsideWhile {
    z = 26;
    while (aa == 27) {
        ab = 28;
        while (ac == 29) {
            ad = 30;
        }
        ae = 31;
    }
    af = 32;
}

procedure Zhao {
    read a; read B;
    c = a * B;
    D = c + 5;
    read XyZ;
    if (a >= B) then {
        B = B + 5;
    } else {
        a = a * 3;}
    while (D < (B * 5)) {
        read e;
        D =
         D + e;}
    read e;
    f = e + XyZ + 4;
    if (8 == D) then {
        if (c <= D) then {
            c = f + XyZ;
        } else {
            XyZ = D % 5;
            print XyZ;}
        a = a + XyZ;
        print a;
    } else {
        a = a + (D / c) * B;
        while (XyZ <= 10) {
            read Henz;
            D = D + Henz;}
    }
    print XyZ;
    print D;
    while ((2 * c) ==
    3) {
        read h;
        while (h > 5) {
            h = e + XyZ * 5 - D % 5;}
        D = (2 * D + (h % 2));
        read g;
        if (g > h)
        then {
            while ((XyZ + f) > g) {
                f = f - (2 * D) + B * 3;
                print f;}
        } else {
            h = g * 2 - XyZ % a + B; print h;}
    }

    read i;
    j = e + D % 5;
    k = 2 + a * B + 4 / B * 3;
    if (!(j > k))
     then {
        while (j <= k) {
            read l;
            print l;
            k = l + g *  2 + D % 4;
            while (l > XyZ + 5)
            {
                XyZ = f + XyZ % (23 + 4) * 6 / a;
                print XyZ;
            }
        }
    } else {
        while
        (a + (B * c) / D - e != f * j + k - l + XyZ) {
            read m;
            if (g  + 2 >=
            h) then {
                h = m + 4 - 2 * B * 3;
                print h;
                XyZ =  XyZ + f - g;
            } else {
                n = 1 / c + i;
                m = n % k + j - D - e * 5;
                print m;}
        }
        a = k + i;
        read XyZ;
        if (a > XyZ) then {
            read B;
            c = B * a;
            h = 5 + c - k;
            print h;
        } else {
            read c;
            D = i * C + k;
            print D;
        }
        print a;
        print D;
    }
}

procedure ifInsideIf2 {
    a = 1;
    if (b == 2) then {
        c = 3;
        if (d == 4) then {
            e = 5;
        } else {
            f = 6;
        }
        g = 7;
    } else {
        h = 8;
    }
    i = 9;
}

procedure whileInsideIf2 {
    j = 10;
    if (k == 11) then {
        l = 12;
        while (m == 13) {
            n = 14;
        }
        o = 15;
    } else {
        p = 16;
    }
    q = 17;
}

procedure ifInsideWhile2 {
    r = 18;
    while (s == 19) {
        t = 20;
        if (u == 21) then {
            v = 22;
        } else {
            w = 23;
        }
        x = 24;
    }
    y = 25;
}

procedure whileInsideWhile2 {
    z = 26;
    while (aa == 27) {
        ab = 28;
        while (ac == 29) {
            ad = 30;
        }
        ae = 31;
    }
    af = 32;
}
