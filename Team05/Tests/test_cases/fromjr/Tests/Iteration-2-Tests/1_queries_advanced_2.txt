1261 - Valid. Missing declaration, select-cl BOOLEAN

Select BOOLEAN
TRUE
5000
1262 - Invalid. Empty declaration
;
Select BOOLEAN

5000
1263 - Invalid. Synonym that starts with special chars
stmt %s;
Select s

5000
1264 - Invalid. Synonym that starts with digit
stmt 8s;
Select s

5000
1265 - Invalid. Synonym that has space
stmt this is a stmt;
Select s

5000
1266 - Valid.
stmt s;
Select s
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31
5000
1267 - Invalid. Same synonym in same entity
assign a, a;
Select a such that Uses(a, "aa")

5000
1268 - Valid.
assign a;
Select a such that Uses(a, "aa")
24
5000
1269 - Invalid. Same synonym in different entity
assign a; stmt a;
Select a such that Uses(a, "aa")

5000
1270 - Valid.
assign a; stmt s;
Select s such that Uses(s, "aa")
2, 14, 24, 15, 16, 26, 29
5000
1271 - Invalid. Synonym used in select-cl but not declared
assign a;
Select s such that Uses(a, "aa") pattern a(_, _)

5000
1272 - Valid.
assign a; stmt s;
Select s such that Uses(a, "aa") pattern a(_, _)
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31
5000
1273 - Invalid. Synonym used in select-cl for Follows but not declared
stmt s1, s2;
Select s such that Follows(s1, s2)

5000
1274 - Invalid. Synonym used in suchthat-cl for Follows but not declared
stmt s1;
Select s2 such that Follows(s1, s2)

5000
1275 - Valid.
stmt s1, s2;
Select s2 such that Follows(s1, s2)
2, 5, 7, 8, 10, 12, 13, 14, 17, 20, 23, 24, 26, 28, 29, 30, 31
5000
1276 - Invalid. Synonym used in select-cl for Parent but not declared
stmt s1, s2;
Select s such that Parent(s1, s2)

5000
1277 - Invalid. Synonym used in suchthat-cl for Parent but not declared
stmt s1;
Select s2 such that Parent(s1, s2)

5000
1278 - Valid.
stmt s1, s2;
Select s2 such that Parent(s1, s2)
3, 4, 6, 7, 8, 9, 10, 11, 12, 15, 16, 19, 20, 21, 22, 23, 27, 28, 29
5000
1279 - Invalid. Synonym used in select-cl for UsesS but not declared
assign a;
Select s such that Uses(a, "aa")

5000
1280 - Invalid. Synonym used in suchthat-cl for ModifiesS but not declared
stmt s;
Select s such that Modifies(a, "bb")

5000
1281 - Valid.
assign a; stmt s;
Select s such that Modifies(a, "bb")
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31
5000
1282 - Invalid. Synonym used in select-cl for UsesS but not declared
assign a;
Select s such that Uses(a, "aa")

5000
1283 - Invalid. Synonym used in suchthat-cl for UsesS but not declared
stmt s;
Select s such that Uses(a, "aa")

5000
1284 - Valid.
assign a; stmt s;
Select s such that Uses(a, "aa")
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31
5000
1285 - Invalid. Synonym used in select-cl for pattern-cl assign but not declared
assign a1;
Select a pattern a(_, _)

5000
1286 - Valid.
assign a;
Select a pattern a(_, _)
4, 6, 9, 11, 13, 24, 30
5000
1287 - Invalid. Synonym used in pattern-cl assign but not declared
assign a;
Select a pattern a(v, _)

5000
1288 - Valid.
assign a; variable v;
Select a pattern a(v, _)
4, 6, 9, 11, 13, 24, 30
5000
1289 - Valid. Call statement in select-cl
call c;
Select c
15, 16, 29
5000
1290 - Valid. Procedure in select-cl
procedure p;
Select p
PR0C1, call, procedure
5000
1291 - Valid. UsesP
variable v;
Select v such that Uses("procedure", v)
stmt, read, print, call, while, if, assign, variable, constant, bb, aa, cc
5000
1292 - Valid. ModifiesP
variable v;
Select v such that Modifies("call", v)
while, variable, constant, bb, stmt, read
5000
1293 - Invalid. Missing expression, pattern-cl assign
assign a;
Select a pattern a(_, _""_)

5000
1294 - Invalid. Tab space for expression, pattern-cl assign
assign a;
Select a pattern a(_, _"    "_)

5000
1295 - Invalid. Space for expression, pattern-cl assign
assign a;
Select a pattern a(_, _" "_)

5000
1296 - Invalid. Double underscores, pattern-cl assign
assign a;
Select a pattern a(_, __)

5000
1297 - Invalid. Underscore inside quotations, pattern-cl assign
assign a;
Select a pattern a(_, "_")

5000
1298 - Invalid. Underscore inside quotations, pattern-cl assign
assign a;
Select a pattern a(_, "_aa_")

5000
1299 - Invalid. Operator must be between two termss, pattern-cl assign
assign a;
Select a pattern a(_, _"-11"_)

5000
1300 - Invalid. Operator must be between two terms, pattern-cl assign
assign a;
Select a pattern a(_, _"11-"_)

5000
1301 - Invalid. Wrong arguments, pattern-cl if
if ifs;
Select ifs pattern ifs(_, _"aa"_, _)

5000
1302 - Invalid. Wrong arguments, pattern-cl if
if ifs;
Select ifs pattern ifs(_, _, _"aa"_)

5000
1303 - Invalid. Double underscores, pattern-cl if
if ifs;
Select ifs pattern ifs(_, _, __)

5000
1304 - Invalid. Double underscores, pattern-cl if
if ifs;
Select ifs pattern ifs(_, __, _)

5000
1305 - Invalid. Wrong arguments, pattern-cl if
if ifs;
Select ifs pattern ifs(1, _, _)

5000
1306 - Invalid. Wrong arguments, pattern-cl if
if ifs; procedure proc;
Select ifs pattern ifs(proc, _, _)

5000
1307 - Invalid. Too many arguments, pattern-cl if
if ifs;
Select ifs pattern ifs(_, _, _, _)

5000
1308 - Invalid. Too little arguments, pattern-cl if
if ifs;
Select ifs pattern ifs(_, _)

5000
1309 - Invalid. Only a comma, pattern-cl if
if ifs;
Select ifs pattern ifs(,)

5000
1310 - Valid. pattern-cl if
if ifs;
Select ifs pattern ifs(_, _, _)
2, 8, 14, 18
5000
1311 - Valid. pattern-cl if
if ifs;
Select ifs pattern ifs("cc", _, _)
2, 8, 14
5000
1312 - Invalid. Wrong arguments, pattern-cl while
while w;
Select ifs pattern w(_, _"aa"_)

5000
1313 - Invalid. Double underscores, pattern-cl while
while w;
Select ifs pattern w(_, __)

5000
1314 - Invalid. Double underscores, pattern-cl while
while w;
Select ifs pattern w(__, _)

5000
1315 - Invalid. Wrong arguments, pattern-cl while
while w;
Select w pattern w(1, _)

5000
1316 - Invalid. Wrong arguments, pattern-cl while
while w; procedure proc;
Select w pattern w(proc, _)

5000
1317 - Invalid. Too many arguments, pattern-cl while
while w;
Select w pattern w(_, _, _)

5000
1318 - Invalid. Too little arguments, pattern-cl while
while w;
Select w pattern w(_)

5000
1319 - Invalid. Only a comma, pattern-cl while
while w;
Select w pattern w(,)

5000
1320 - Valid. pattern-cl while
while w;
Select w pattern w(_, _)
5, 21, 26
5000
1321 - Valid. pattern-cl while
while w;
Select w pattern w("cc", _)
5
5000
1322 - Invalid. Design entity instead of synonym, with-cl stmt
stmt s;
Select s with stmt.stmt# = 1

5000
1323 - Invalid. Missing attr LHS, with-cl stmt
stmt s;
Select s with s = 1

5000
1324 - Invalid. Missing attr LHS and RHS, with-cl stmt
stmt s;
Select s with s = s

5000
1325 - Invalid. Uppercase stmt# attr, with-cl stmt
stmt s;
Select s with s.STMT# = 1

5000
1326 - Invalid. String stmt# attr type, with-cl stmt
stmt s;
Select s with s.stmt# = "1"

5000
1327 - Valid. Selecting a with-cl, with-cl stmt
stmt s;
Select s.stmt# with s.stmt# = 1
1
5000
1328 - Invalid. Outside lower bound, with-cl stmt
stmt s;
Select s with s.stmt# = 0

5000
1329 - Invalid. Outside upper bound, with-cl stmt
stmt s;
Select s with s.stmt# = 32

5000
1330 - Valid. with-cl stmt
stmt stmt;
Select stmt with stmt.stmt# = 1
1
5000
1331 - Valid. with-cl stmt
stmt s;
Select s with s.stmt# = s.stmt#
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31
5000
1332 - Invalid. Design entity instead of synonym, with-cl read
read r;
Select r with read.stmt# = 3

5000
1333 - Invalid. Missing attr LHS, with-cl read
read r;
Select r with r = 3

5000
1334 - Invalid. Missing attr LHS and RHS, with-cl read
read r;
Select r with r = r

5000
1335 - Invalid. Uppercase stmt# attr, with-cl read
read r;
Select r with r.STMT# = 3

5000
1336 - Invalid. String stmt# attr type, with-cl read
read r;
Select r with r.stmt# = "3"

5000
1337 - Valid. Selecting a with-cl, with-cl read
read r;
Select r.stmt# with r.stmt# = 3
3
5000
1338 - Invalid. Outside lower bound, with-cl read
read r;
Select r with r.stmt# = 0

5000
1339 - Invalid. Outside upper bound, with-cl read
read r;
Select r with r.stmt# = 32

5000
1340 - Invalid. Cannot equal varName, with-cl read
read r; variable v;
Select r with r.stmt# = v.varName

5000
1341 - Invalid. Cannot equal procName, with-cl read
read r; procedure proc;
Select r with r.stmt# = proc.procName

5000
1342 - Valid. with-cl read
read read;
Select read with read.stmt# = 3
3
5000
1343 - Valid. with-cl read
read read;
Select read with read.stmt# = 1

5000
1344 - Valid. with-cl read
read r;
Select r with r.stmt# = r.stmt#
3, 7, 10, 17, 20, 22, 25, 27
5000
1345 - Invalid. Design entity instead of synonym, with-cl read
read r;
Select r with read.varName = "aa"

5000
1346 - Invalid. Underscore, with-cl read
read r;
Select r with r.varName = "_"

5000
1347 - Invalid. Single quotation, with-cl read
read r;
Select r with r.varName = 'aa'

5000
1348 - Invalid. No quotations, with-cl read
read r;
Select r with r.varName = aa

5000
1349 - Invalid. One-sided quotations, with-cl read
read r;
Select r with r.varName = "aa

5000
1350 - Invalid. Integer attr value, with-cl read
read r;
Select r with r.varName = 1

5000
1351 - Invalid. Misspelt attr, with-cl read
read r;
Select r with r.varname = "aa"

5000
1352 - Valid. with-cl read
read read;
Select read with read.varName = "aa"
10
5000
1353 - Valid. with-cl read
read read;
Select read with read.varName = "bb"

5000
1354 - Valid. with-cl read
read read;
Select read with read.varName = read.varName
3, 7, 10, 17, 20, 22, 25, 27
5000
1355 - Valid. with-cl read
read read;
Select read.varName with read.varName = read.varName
assign, cc, aa, call, stmt, read, while, variable
5000
1356 - Valid. with-cl read
read read;
Select read.stmt# with read.varName = read.varName
3, 7, 10, 17, 20, 22, 25, 27
5000
1357 - Invalid. Design entity instead of synonym, with-cl while
while w;
Select w with while.stmt# = 5

5000
1358 - Invalid. Missing attr LHS, with-cl while
while w;
Select w with w = 5

5000
1359 - Invalid. Missing attr LHS and RHS, with-cl while
while w;
Select w with w = w

5000
1360 - Invalid. Uppercase stmt# attr, with-cl while
while w;
Select w with w.STMT# = 5

5000
1361 - Invalid. String stmt# attr type, with-cl while
while w;
Select w with w.stmt# = "5"

5000
1362 - Valid. Selecting a with-cl, with-cl while
while w;
Select w.stmt# with w.stmt# = 5
5
5000
1363 - Invalid. Outside lower bound, with-cl while
while w;
Select w with w.stmt# = 0

5000
1364 - Invalid. Outside upper bound, with-cl while
while w;
Select w with w.stmt# = 32

5000
1365 - Invalid. Cannot equal varName, with-cl while
while w; variable v;
Select w with w.stmt# = v.varName

5000
1366 - Invalid. Cannot equal procName, with-cl while
while w; procedure proc;
Select w with w.stmt# = proc.procName

5000
1367 - Valid. with-cl while
while while;
Select while with while.stmt# = 5
5
5000
1368 - Valid. with-cl while
while while;
Select while with while.stmt# = 1

5000
1369 - Valid. with-cl while
while w;
Select w with w.stmt# = w.stmt#
5, 21, 26
5000
1370 - Invalid. attr is .value, with-cl constant
constant c;
Select c with c.stmt# = 22

5000
1371 - Invalid. Design entity instead of synonym, with-cl constant
constant c;
Select c with constant.value = 22

5000
1372 - Invalid. Missing attr LHS, with-cl constant
constant c;
Select c with c = 22

5000
1373 - Invalid. Missing attr LHS and RHS, with-cl constant
constant c;
Select c with c = c

5000
1374 - Invalid. Uppercase .value attr, with-cl constant
constant c;
Select c with c.VALUE = 22

5000
1375 - Invalid. String .value attr type, with-cl constant
constant c;
Select c with c.value = "22"

5000
1376 - Valid. Selecting a with-cl, with-cl constant
constant c;
Select c.value with c.value = 22
22
5000
1377 - Valid. Value exists, with-cl constant
constant c;
Select c with c.value = 0
0
5000
1378 - Invalid. No such value, with-cl constant
constant c;
Select c with c.value = 100

5000
1379 - Invalid. Cannot equal varName, with-cl constant
constant c; variable v;
Select c with c.value = v.varName

5000
1380 - Invalid. Cannot equal procName, with-cl constant
constant c; procedure proc;
Select c with c.value = proc.procName

5000
1381 - Valid. with-cl constant
constant constant;
Select constant with constant.value = 22
22
5000
1382 - Valid. with-cl constant
constant constant;
Select constant with constant.value = 1
1
5000
1383 - Valid. with-cl constant
constant c;
Select c with c.value = c.value
0, 1, 2, 11, 22, 33
5000
1384 - Invalid. Design entity instead of synonym, with-cl procedure
procedure proc;
Select proc with procedure.procName = "PR0C1"

5000
1385 - Invalid. Underscore, with-cl procedure
procedure proc;
Select proc with proc.procName = "_"

5000
1386 - Invalid. Single quotation, with-cl procedure
procedure proc;
Select proc with proc.procName = 'PR0C1'

5000
1387 - Invalid. No quotations, with-cl procedure
procedure proc;
Select proc with proc.procName = PR0C1

5000
1388 - Invalid. One-sided quotations, with-cl procedure
procedure proc;
Select proc with proc.procName = "PR0C1

5000
1389 - Invalid. Integer attr value, with-cl procedure
procedure proc;
Select proc with proc.procName = 1

5000
1390 - Invalid. Misspelt attr, with-cl procedure
procedure proc;
Select proc with proc.procname = "PR0C1"

5000
1391 - Valid. with-cl procedure
procedure procedure;
Select procedure with procedure.procName = "PR0C1"
PR0C1
5000
1392 - Valid. with-cl procedure
procedure procedure;
Select procedure.procName with procedure.procName = "PR0C1"
PR0C1
5000
1393 - Valid. with-cl procedure
procedure proc;
Select proc with proc.procName = proc.procName
PR0C1, procedure, call
5000
1394 - Invalid. Design entity instead of synonym, with-cl prog_line
prog_line n;
Select n with prog_line = 5

5000
1395 - Invalid. Having stmt# attr, with-cl prog_line
prog_line n;
Select n with n.stmt# = 1

5000
1396 - Invalid. Having value attr, with-cl prog_line
prog_line n;
Select n with n.value = 1

5000
1397 - Invalid. Having varName attr, with-cl prog_line
prog_line n;
Select n with n.varName = 1

5000
1398 - Invalid. String stmt# attr type, with-cl prog_line
prog_line n;
Select n with n = "5"

5000
1399 - Invalid. Outside lower bound, with-cl prog_line
prog_line n;
Select n with n = 0

5000
1400 - Invalid. Outside upper bound, with-cl prog_line
prog_line n;
Select n with n = 32

5000
1401 - Invalid. Cannot equal varName, with-cl prog_line
prog_line n; variable v;
Select n with n = v.varName

5000
1402 - Invalid. Cannot equal procName, with-cl prog_line
prog_line n; procedure proc;
Select n with n = proc.procName

5000
1403 - Invalid. Not = operator , with-cl prog_line
prog_line n; procedure proc;
Select n with n < 1

5000
1404 - Invalid. Double = operator , with-cl prog_line
prog_line n; procedure proc;
Select n with n == 1

5000
1405 - Valid. with-cl prog_line
prog_line n;
Select n with   n     =   1
1
5000
1406 - Valid. with-cl prog_line
prog_line n;
Select n with n=1
1
5000
1407 - Valid. with-cl prog_line
prog_line n;
Select n with n = 1
1
5000
1408 - Valid. with-cl prog_line
prog_line n;
Select n with n = n
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31
5000
1409 - Invalid. Missing angle bracket, select-cl tuple
constant c1, c2;
Select c1, c2

5000
1410 - Invalid. Missing angle bracket RHS, select-cl tuple
constant c1, c2;
Select <c1, c2

5000
1411 - Invalid. Missing angle bracket LHS, select-cl tuple
constant c1, c2;
Select c1, c2>

5000
1412 - Invalid. Extra comma after synonym, select-cl tuple
constant c;
Select <c,>

5000
1413 - Invalid. Extra comma before synonym, select-cl tuple
constant c;
Select <,c>

5000
1414 - Invalid. Empty tuple, select-cl tuple
constant c;
Select <>

5000
1415 - Invalid. Wildcard, select-cl tuple
constant c;
Select <_>

5000
1416 - Invalid. Comma, select-cl tuple
constant c;
Select <,>

5000
1417 - Invalid. Space, select-cl tuple
constant c;
Select < >

5000
1418 - Invalid. Attr inside select-cl, select-cl tuple
constant c;
Select <c.value>
0, 1, 2, 11, 22, 33
5000
1419 - Valid. Duplicate synonym, select-cl tuple
read r;
Select <r, r, r>
3 3 3, 7 7 7, 10 10 10, 17 17 17, 20 20 20, 22 22 22, 25 25 25, 27 27 27
5000
1420 - Valid. Duplicate synonym, select-cl tuple
read r;
Select <r.stmt#, r.stmt#, r.stmt#>
3 3 3, 7 7 7, 10 10 10, 17 17 17, 20 20 20, 22 22 22, 25 25 25, 27 27 27
5000
1421 - Valid. Duplicate synonym, select-cl tuple
read r;
Select <r.varName, r.varName, r.varName>
assign assign assign, cc cc cc, aa aa aa, call call call, stmt stmt stmt, read read read, while while while, variable variable variable
5000
1422 - Valid. Same entity different synonym, select-cl tuple
read r1, r2;
Select <r1, r2>
3 3, 3 7, 3 10, 3 17, 3 20, 3 22, 3 25, 3 27, 7 3, 7 7, 7 10, 7 17, 7 20, 7 22, 7 25, 7 27, 10 3, 10 7, 10 10 , 10 17, 10 20, 10 22, 10 25, 10 27, 17 3, 17 7, 17 10, 17 17, 17 20, 17 22, 17 25, 17 27, 20 3, 20 7, 20 10, 20 17, 20 20, 20 22, 20 25, 20 27, 22 3, 22 7, 22 10, 22 17, 22 20, 22 22, 22 25, 22 27, 25 3, 25 7, 25 10, 25 17, 25 20, 25 22, 25 25, 25 27, 27 3, 27 7, 27 10, 27 17, 27 20, 27 22, 27 25, 27 27
5000
1423 - Valid. Same entity different synonym, select-cl tuple
read r1, r2;
Select <r1.stmt#, r2.stmt#>
3 3, 3 7, 3 10, 3 17, 3 20, 3 22, 3 25, 3 27, 7 3, 7 7, 7 10, 7 17, 7 20, 7 22, 7 25, 7 27, 10 3, 10 7, 10 10 , 10 17, 10 20, 10 22, 10 25, 10 27, 17 3, 17 7, 17 10, 17 17, 17 20, 17 22, 17 25, 17 27, 20 3, 20 7, 20 10, 20 17, 20 20, 20 22, 20 25, 20 27, 22 3, 22 7, 22 10, 22 17, 22 20, 22 22, 22 25, 22 27, 25 3, 25 7, 25 10, 25 17, 25 20, 25 22, 25 25, 25 27, 27 3, 27 7, 27 10, 27 17, 27 20, 27 22, 27 25, 27 27
5000
1424 - Valid. Same entity different synonym, select-cl tuple
read r1, r2;
Select <r1.varName, r2.varName>
assign assign, assign cc, assign aa, assign call, assign stmt, assign read, assign while, assign variable, cc assign, cc cc, cc aa, cc call, cc stmt, cc read, cc while, cc variable, aa assign, aa cc, aa aa, aa call, aa stmt, aa read, aa while, aa variable, call assign, call cc, call aa, call call, call stmt, call read, call while, call variable, stmt assign, stmt cc, stmt aa, stmt call, stmt stmt, stmt read, stmt while, stmt variable, read assign, read cc, read aa, read call, read stmt, read read, read while, read variable, while assign, while cc, while aa, while call, while stmt, while read, while while, while variable, variable assign, variable cc, variable aa, variable call, variable stmt, variable read, variable while, variable variable
5000
1425 - Valid. Single elem, select-cl tuple
read r;
Select <r>
3, 7, 10, 17, 20, 22, 25, 27
5000
1426 - Valid. Single elem, select-cl tuple
read r;
Select <r.stmt#>
3, 7, 10, 17, 20, 22, 25, 27
5000
1427 - Valid. Single elem, select-cl tuple
read r;
Select <r.varName>
assign, cc, aa, call, stmt, read, while, variable
5000
1428 - Valid. Case sensitive elem, select-cl tuple
read r, R;
Select <r, R>
3 3, 3 7, 3 10, 3 17, 3 20, 3 22, 3 25, 3 27, 7 3, 7 7, 7 10, 7 17, 7 20, 7 22, 7 25, 7 27, 10 3, 10 7, 10 10 , 10 17, 10 20, 10 22, 10 25, 10 27, 17 3, 17 7, 17 10, 17 17, 17 20, 17 22, 17 25, 17 27, 20 3, 20 7, 20 10, 20 17, 20 20, 20 22, 20 25, 20 27, 22 3, 22 7, 22 10, 22 17, 22 20, 22 22, 22 25, 22 27, 25 3, 25 7, 25 10, 25 17, 25 20, 25 22, 25 25, 25 27, 27 3, 27 7, 27 10, 27 17, 27 20, 27 22, 27 25, 27 27
5000
1429 - Valid. Case sensitive elem, select-cl tuple
read r, R;
Select <r.stmt#, R.stmt#>
3 3, 3 7, 3 10, 3 17, 3 20, 3 22, 3 25, 3 27, 7 3, 7 7, 7 10, 7 17, 7 20, 7 22, 7 25, 7 27, 10 3, 10 7, 10 10 , 10 17, 10 20, 10 22, 10 25, 10 27, 17 3, 17 7, 17 10, 17 17, 17 20, 17 22, 17 25, 17 27, 20 3, 20 7, 20 10, 20 17, 20 20, 20 22, 20 25, 20 27, 22 3, 22 7, 22 10, 22 17, 22 20, 22 22, 22 25, 22 27, 25 3, 25 7, 25 10, 25 17, 25 20, 25 22, 25 25, 25 27, 27 3, 27 7, 27 10, 27 17, 27 20, 27 22, 27 25, 27 27
5000
1430 - Valid. Case sensitive elem, select-cl tuple
read r, R;
Select <r.varName, R.varName>
assign assign, assign cc, assign aa, assign call, assign stmt, assign read, assign while, assign variable, cc assign, cc cc, cc aa, cc call, cc stmt, cc read, cc while, cc variable, aa assign, aa cc, aa aa, aa call, aa stmt, aa read, aa while, aa variable, call assign, call cc, call aa, call call, call stmt, call read, call while, call variable, stmt assign, stmt cc, stmt aa, stmt call, stmt stmt, stmt read, stmt while, stmt variable, read assign, read cc, read aa, read call, read stmt, read read, read while, read variable, while assign, while cc, while aa, while call, while stmt, while read, while while, while variable, variable assign, variable cc, variable aa, variable call, variable stmt, variable read, variable while, variable variable
5000
1431 - Valid. Different design entity, select-cl tuple
read r; constant c;
Select <r, c>
3 0, 7 0, 10 0, 17 0, 20 0, 22 0, 25 0, 27 0, 3 1, 7 1, 10 1, 17 1, 20 1, 22 1, 25 1, 27 1, 3 2, 7 2, 10 2, 17 2, 20 2, 22 2, 25 2, 27 2, 3 11, 7 11, 10 11, 17 11, 20 11, 22 11, 25 11, 27 11, 3 22, 7 22, 10 22, 17 22, 20 22, 22 22, 25 22, 27 22, 3 33, 7 33, 10 33, 17 33, 20 33, 22 33, 25 33, 27 33
5000
1432 - Valid. Different design entity, select-cl tuple
read r; constant c;
Select <r.stmt#, c.value>
3 0, 7 0, 10 0, 17 0, 20 0, 22 0, 25 0, 27 0, 3 1, 7 1, 10 1, 17 1, 20 1, 22 1, 25 1, 27 1, 3 2, 7 2, 10 2, 17 2, 20 2, 22 2, 25 2, 27 2, 3 11, 7 11, 10 11, 17 11, 20 11, 22 11, 25 11, 27 11, 3 22, 7 22, 10 22, 17 22, 20 22, 22 22, 25 22, 27 22, 3 33, 7 33, 10 33, 17 33, 20 33, 22 33, 25 33, 27 33
5000
1433 - Valid. Different design entity, select-cl tuple
read r; constant c;
Select <r.varName, c.value>
assign 0, cc 0, aa 0, call 0, stmt 0, read 0, while 0, variable 0, assign 1, cc 1, aa 1, call 1, stmt 1, read 1, while 1, variable 1, assign 2, cc 2, aa 2, call 2, stmt 2, read 2, while 2, variable 2, assign 11, cc 11, aa 11, call 11, stmt 11, read 11, while 11, variable 11, assign 22, cc 22, aa 22, call 22, stmt 22, read 22, while 22, variable 22, assign 33, cc 33, aa 33, call 33, stmt 33, read 33, while 33, variable 33
5000
1434 - Invalid. Lowercase BOOLEAN, select-cl BOOLEAN
stmt s;
Select boolean

5000
1435 - Invalid. Misspelt BOOLEAN, select-cl BOOLEAN
stmt s;
Select BOOL

5000
1436 - Valid. with-cl attrCond, select-cl BOOLEAN

Select BOOLEAN with 0 = 0
TRUE
5000
1437 - Valid. with-cl attrCond, select-cl BOOLEAN

Select BOOLEAN with 100 = 101
FALSE
5000
1438 - Valid. select-cl BOOLEAN
stmt s;
Select BOOLEAN
TRUE
5000
1439 - Valid. select-cl BOOLEAN
stmt BOOLEAN;
Select BOOLEAN
TRUE
5000
