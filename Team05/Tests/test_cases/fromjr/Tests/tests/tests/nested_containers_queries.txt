1 - Calls single clause (p, _)
procedure p;
Select p such that Calls (p, _)
A, B, C
5000
2 - Calls single clause (name, _)
procedure p;
Select p such that Calls ("A", _)
A, B, C, D
5000
3 - Calls single clause (name, name)

Select BOOLEAN such that Calls ("A", "B")
TRUE
5000
4 - Calls single clause (_, _)

Select BOOLEAN such that Calls (_, _)
TRUE
5000
5 - Calls single clause (p, name)
procedure p;
Select p such that Calls (p, "C")
A, B
5000
6 - Calls single clause (p, p)
procedure p1, p2;
Select <p1, p2> such that Calls (p1, p2)
A B, A C, B C, C D
5000
7 - Calls* single clause (_, name)
procedure p;
Select p such that Calls* (_, "C")
A, B, C, D
5000
8 - Calls* single clause (p, p)
procedure p1, p2;
Select <p1, p2> such that Calls* (p1, p2)
A B, A C, B C, C D, A D, B D
5000
9 - Calls* single clause (p, name)
procedure p;
Select p such that Calls* (p, "D")
A, B, C
5000
10 - Calls* single clause (_, _)
procedure p;
Select p such that Calls* (_, _)
A, B, C, D
5000
11 - Calls* single clause (p, _)
procedure p;
Select p such that Calls* (p, _)
A, B, C
5000
12 - Calls* single clause (name, name)

Select BOOLEAN such that Calls* ("D", "A")
FALSE
5000
13 - Next single clause (num, s)
stmt s;
Select s such that Next (17, s)
18, 21
5000
14 - Next single clause (num, n)
prog_line n;
Select n such that Next (49, n)
50, 52
5000
15 - Next single clause (n, num)
prog_line n;
Select <n> such that Next (n, 40)
31, 37, 39
5000
16 - Next single clause (s, num)
stmt s;
Select s.stmt# such that Next (s, 49)
42, 51
5000
17 - Next single clause (num, _)
procedure p;
Select p such that Next (64, _)
A, B, C, D
5000
18 - Next single clause (num, _)
call cl;
Select cl such that Next (6, _)
15, 31, 64, 68, 72
5000
19 - Next single clause (_, num)

Select BOOLEAN such that Next (_, 1)
FALSE
5000
20 - Next single clause (_, num)
read read;
Select read.varName such that Next (_, 62)
x,y,a,d
5000
21 - Next single clause (_, _)
procedure p;
Select p such that Next (_, _)
A, B, C, D
5000
22 - Next single clause (_, s)
stmt s;
Select s such that Next (_, s)
2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 70, 71, 72, 74
5000
23 - Next single clause (n, _)
prog_line n;
Select n such that Next (n, _)
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 73
5000
24 - Next single clause (n, s)
prog_line n; stmt s;
Select BOOLEAN such that Next (n, s)
TRUE
5000
25 - Next single clause (n, n)
prog_line n1, n2;
Select n1 such that Next (n1, n2)
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 73
5000
26 - Next single clause (s, s)
stmt s;
Select s such that Next (s, s)
none
5000
27 - Next single clause (num, num)

Select BOOLEAN such that Next (40, 41)
FALSE
5000
28 - Next single clause (num, num)
call cl;
Select <cl.procName> such that Next (64, 54)
C, B, D
5000
29 - Next* single clause (num, s)
stmt s;
Select s such that Next* (41, s)
42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64
5000
30 - Next* single clause (num, n)
prog_line n;
Select n such that Next* (6, n)
6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64
5000
31 - Next* single clause (n, num)
prog_line n;
Select n such that Next* (n, 28)
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40
5000
32 - Next* single clause (s, num)
stmt s;
Select s such that Next* (s, 52)
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51
5000
33 - Next* single clause (_, _)
print print;
Select print.stmt# such that Next* (_, _)
5, 24, 40, 53, 63, 69
5000
34 - Next* single clause (n, n)
prog_line n;
Select n such that Next* (n, n)
6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 49, 50, 51, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64
5000
35 - Next* single clause (s, s)
stmt s1, s2;
Select s1 such that Next* (s1, s2)
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 73
5000
36 - Next* single clause (num, num)

Select BOOLEAN such that Next* (40, 41)
TRUE
5000
37 - Next* single clause (num, num)
procedure p;
Select p such that Next* (1, 65)
none
5000
38 - Next* single clause (num, num)
variable v;
Select <v> such that Next* (64, 64)
a, b, c, d, e, x, y, z, i
5000
39 - Next* single clause (_, num)
variable v;
Select v such that Next* (_, 16)
a, b, c, d, e, x, y, z, i
5000
40 - Next* single clause (_, num)
constant c;
Select c.value such that Next* (_, 6)
0, 1, 2, 3, 4, 5, 10, 20, 50
5000
41 - Next* single clause (num, _)
assign a;
Select a such that Next* (53, _)
1,2,7,9,10,11,14,16,18,19,20,21,22,26,27,28,29,30,32,33,35,36,38,39,43,45,46,48,50,51,52,55,57,58,59,61,66,67,70,71,73,74
5000
42 - Next* single clause (num, _)
if ifs;
Select ifs.stmt# such that Next* (19, _)
17,23,34,41,42,44,56
5000
43 - Next* single clause (n, _)
prog_line n;
Select n such that Next* (n, _)
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 73
5000
44 - Next* single clause (s, _)
call cl;
Select cl such that Next* (cl, _)
15, 31, 64
5000
45 - Next* single clause (attr, _) - invalid
stmt s;
Select s such that Next* (s.stmt#, _)
none
5000
46 - Next single clause (_, v) - invalid
variable v;
Select v such that Next (_, v)
none
5000
47 - Next* single clause (stmt, v) - invalid
variable v;
Select v such that Next* (15, v)
none
5000
48 - Next single clause (stmt, proc) - invalid
variable v;
Select v such that Next (20, "A")
none
5000
49 - Next* single clause (var, v) - invalid
variable v;
Select v such that Next* ("x", v)
none
5000
50 - Next single clause (_, proc) - invalid
variable v;
Select v such that Next (_, "A")
none
5000
51 - Next single clause (n, proc) - invalid
prog_line n;
Select n such that Next (n, "A")
none
5000
52 - pattern while (_, _)
while w;
Select w pattern w (_, _)
6,8,12,25,49,54,60
5000
53 - pattern while (v, _)
variable v; while w;
Select v pattern w (v, _)
a,e,i,x,y,z
5000
54 - pattern while (var, _)
while w;
Select w pattern w ("x", _)
8, 12, 49
5000
55 - pattern while (var, _)
while w;
Select w pattern w ("e", _)
60
5000
56 - pattern while (var, _)
while w;
Select w pattern w ("hello", _)
none
5000
57 - pattern while (var, var) - invalid
while w;
Select w pattern w ("a", "x")
none
5000
58 - pattern while (var, var) - invalid
while w;
Select w pattern w ("a", _"x"_)
none
5000
59 - pattern while (stmt, var) - invalid
while w;
Select w pattern w (15, "x")
none
5000
60 - pattern if (_, _, _)
if if;
Select if pattern if (_, _, _)
17,23,34,41,42,44,56
5000
61 - pattern if (v, _, _)
variable v; if ifs;
Select v pattern ifs (v, _, _)
a,b,c,d,y
5000
62 - pattern if (var, _, _)
if ifs;
Select ifs.stmt# pattern ifs ("c", _, _)
23, 42, 44, 56
5000
63 - pattern if (var, _, _)
if ifs;
Select ifs pattern ifs ("border", _, _)
none
5000
64 - pattern if (var, _, _)
if ifs;
Select ifs pattern ifs ("y", _, _)
34, 41
5000
65 - pattern if (var, var, var) - invalid
if ifs;
Select ifs pattern ifs ("y", "a", "b")
none
5000
66 - pattern if (var, var, _) - invalid
if ifs;
Select ifs pattern ifs ("y", _"a"_, _)
none
5000
67 - pattern if (stmt, _, _) - invalid
if ifs;
Select ifs pattern ifs (15, _"a"_, _)
none
5000
68 - pattern if (var, _, var) - invalid
if ifs;
Select ifs pattern ifs ("x", _, "x")
none
5000
69 - pattern if (stmt, _, _) - invalid
if ifs; prog_line n; variable v;
Select ifs pattern n (v, _, _)
none
5000
70 - 2 clauses (2 st) | 2-1 connected
procedure p; variable v;
Select <p, v> such that Calls* ("B", p) such that Uses (p, v)
C z, C a, C b, C c, C d, D a, D d
5000
71 - 2 clauses (2 st) | 1-2 connected
prog_line n; stmt s;
Select <n, s> such that Next(n, s) and Follows(s, 52)
41 42
5000
72 - 2 clauses (2 p) | 2 unlinked
if ifs; while w; variable v;
Select v pattern ifs (v, _, _) pattern w (v, _)
a, y
5000
73 - 2 clauses (2 w) | 2 connected
read re; print pn; constant c;
Select <pn.stmt#, re.varName> with pn.varName = re.varName and re.stmt# = c.value
40 x
5000
74 - 3 clauses (1 st 2 p) | 2 connected, 1 unlinked
variable v; assign a; while w;
Select v such that Calls (_, _) pattern a (v, _"a + b"_) and w (v, _)
z, x, a
5000
75 - 3 clauses (1 st 2 w) | 0 connected, 2 connected
procedure p; constant c; stmt s;
Select BOOLEAN with c.value = 20 and c.value = s.stmt# such that Calls* (_, _)
TRUE
5000
76 - 3 clauses (2 st 1 p) | 0 connected, 2-2 connected
prog_line n; if ifs;
Select BOOLEAN such that Next*(n, _) and Follows(n, ifs) pattern ifs ("c", _, _)
TRUE
5000
77 - 3 clauses (1 st 2 w) | 1 connected, 2-2 connected
read re; variable v; stmt s;
Select v such that Next (_, s) with v.varName = re.varName and s.stmt# = re.stmt#
x, y, a, d
5000
78 - 3 clauses (1 st 2 w) | 1 connected, 3 connected
procedure p; call cl;
Select cl with p.procName = "B" and cl.procName = p.procName such that Calls (_, p)
64
5000
79 - 3 clauses (1 st 2 p) | 1 connected, 2 unlinked
variable v; while w; if ifs; procedure p;
Select p such that Calls* (p, "F") pattern w (v, _) pattern ifs (v, _, _)
none
5000
80 - 3 clauses (1 st 1 w 1 p) | 1 connected, 2 connected, 1 unlinked
assign a; stmt s;
Select s with s.stmt# = a.stmt# pattern a (_, _) such that Next* (57, 58)
1, 2, 7, 9, 10, 11, 14, 16, 18, 19, 20, 21, 22, 26, 27,28, 29, 30, 32, 33, 35, 36, 38, 39, 43, 45, 46, 48, 50, 51, 52, 55, 57, 58, 59, 61, 66, 67, 70, 71, 73, 74
5000
81 - 3 clauses (1 st 2 w) | 2 connected, 1 unlinked
read re; prog_line n; constant c;
Select n such that Next* (_, 15) with n = re.stmt# and n = c.value
3, 4
5000
82 - 3 clauses (1 st 1 w 1 p) | 1-2 connected, 2 connected
print pn; assign a; variable v; if ifs; stmt s;
Select <s, pn> such that Next (s, pn) with pn.varName = v.varName pattern ifs (v, _, _)
23 24, 41 53
5000
83 - 3 clauses (1 st 2 p) | 2-2 connected
while w; if ifs;
Select <w.stmt#, ifs.stmt#> such that Next (w, ifs) pattern w (_, _) pattern ifs (_, _, _)
6 41, 8 23
5000
84 - 3 clauses (2 st 1 w) | 2-2 connected
procedure p1, p2;
Select <p1, p2> such that Calls (p1, p2) with p1.procName = "A" such that Uses(p2, "x")
A B
5000
85 - 3 clauses (3 st) | 3 connected
procedure p1, p2, p3;
Select p2 such that Modifies (p2, _) such that Calls (p1, p2) and Calls (p2, p3)
B, C
5000
86 - 3 clauses (3 st) | all connected
while w; if ifs; variable v; stmt s1, s2; read re; constant c; assign a;
Select <s1, s2> such that Next* (s1, s2) and Parent* (s1, s2) and Follows* (s1, s2)
none
5000
87 - 4 clauses (1 st 3 p) | 0 connected, 5 unlinked
while w; if ifs; variable v; stmt s1, s2; read re; constant c; assign a;
Select c such that Next* (s1, s2) with a.stmt# = 2 and re.varName = "x" pattern ifs (v, _, _) and w (_, _)
0,1,2,3,4,5,10,20,50
5000
88 - 4 clauses (2 st 1 w 1 p) | 1 connected, 2-3 connected
procedure p; assign a; variable v; read re;
Select re such that Calls* (p, _) and Modifies (p, v) with v.varName = re.varName pattern a (v, _"c"_)
65, 3, 13, 62
5000
89 - 4 clauses (3 st 1 w) | 2-2-1-2 connected
procedure p; variable v; constant c; stmt s;
Select <p.procName, v.varName, c.value, s.stmt#> such that Modifies (p, v) and Uses (s, v) and Calls* (p, _) with c.value = s.stmt#
A a 10 10, A b 10 10, A c 20 20, A z 5 5, B z 5 5, B a 10 10, B c 20 20, C a 10 10, C c 20 20
5000
90 - 4 clauses (1 st 3 p) | 2-3 connected
while w; if ifs; assign a; variable v;
Select <a.stmt#, v.varName> such that Next* (a, _) pattern a (v, _) pattern ifs (v, _, _) and w (v, _)
9 y, 30 y, 32 y, 38 y, 43 y, 55 y, 73 y, 1 a, 16 a, 18 a, 26 a, 35 a, 51 a, 57 a, 70 a
5000
91 - 4 clauses (2 st 1 w 1 p) | 3 connected, 2 connected
procedure p; variable v; assign a;
Select v such that Calls (_, p) and Modifies(p, v) with p.procName = "D" pattern a(v, _)
c, y
5000
92 - 5 clauses (2 st 1 w 2 p) | 2-4 connected
while w; if ifs; assign a; variable v; call cl;
Select <cl, v> with cl.procName = "B" and cl.stmt# = 64 such that Uses ("B", v) pattern ifs (v, _, _) and w (v, _) and a (v, _)
64 a, 64 y
5000